#include<vector>

using namespace std;


/*
1808. 好因子的最大数目
给你一个正整数 primeFactors 。你需要构造一个正整数 n ，它满足以下条件：

n 质因数（质因数需要考虑重复的情况）的数目 不超过 primeFactors 个。
n 好因子的数目最大化。如果 n 的一个因子可以被 n 的每一个质因数整除，我们称这个因子是 好因子 。比方说，如果 n = 12 ，那么它的质因数为 [2,2,3] ，那么 6 和 12 是好因子，但 3 和 4 不是。
请你返回 n 的好因子的数目。由于答案可能会很大，请返回答案对 109 + 7 取余 的结果。

请注意，一个质数的定义是大于 1 ，且不能被分解为两个小于该数的自然数相乘。一个数 n 的质因子是将 n 分解为若干个质因子，且它们的乘积为 n 。
*/
typedef long long LL;
const int MOD = 1e9 + 7;
class Solution {
public:
	int qmi(int a, int b)
	{
		int res = 1;
		while (b)
		{
			if (b & 1) res = (LL)res * a % MOD;
			a = (LL)a * a % MOD;
			b >>= 1;
		}
		return res;
	}

	int maxNiceDivisors(int primeFactors) {
		if (primeFactors <= 3) return primeFactors;
		if (primeFactors % 3 == 0) return qmi(3, primeFactors / 3);
		if (primeFactors % 3 == 1)
			return (LL)qmi(3, (primeFactors - 4) / 3) * 4 % MOD;
		return (LL)qmi(3, (primeFactors - 2) / 3) * 2 % MOD;
	}
};