#include<vector>

using namespace std;


/*
982. 按位与为零的三元组

给你一个整数数组 nums ，返回其中 按位与三元组 的数目。

按位与三元组 是由下标 (i, j, k) 组成的三元组，并满足下述全部条件：

0 <= i < nums.length
0 <= j < nums.length
0 <= k < nums.length
nums[i] & nums[j] & nums[k] == 0 ，其中 & 表示按位与运算符。
*/


//方法一：枚举
class Solution {
public:
	int countTriplets(vector<int>& nums) {
		vector<int> cnt(1 << 16);
		for (int x : nums) {
			for (int y : nums) {
				++cnt[x & y];
			}
		}
		int ans = 0;
		for (int x : nums) {
			for (int mask = 0; mask < (1 << 16); ++mask) {
				if ((x & mask) == 0) {
					ans += cnt[mask];
				}
			}
		}
		return ans;
	}
};


//方法二：枚举+子集优化
class Solution {
public:
	int countTriplets(vector<int>& nums) {
		vector<int> cnt(1 << 16);
		for (int x : nums) {
			for (int y : nums) {
				++cnt[x & y];
			}
		}
		int ans = 0;
		for (int x : nums) {
			x = x ^ 0xffff;
			for (int sub = x; sub; sub = (sub - 1) & x) {
				ans += cnt[sub];
			}
			ans += cnt[0];
		}
		return ans;
	}
};
