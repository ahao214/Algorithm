#include<vector>
#include <unordered_set>
#include <unordered_map>

using namespace std;


/*
399. 除法求值

给你一个变量对数组 equations 和一个实数值数组 values 作为已知条件，其中 equations[i] = [Ai, Bi] 和 values[i] 共同表示等式 Ai / Bi = values[i] 。每个 Ai 或 Bi 是一个表示单个变量的字符串。

另有一些以数组 queries 表示的问题，其中 queries[j] = [Cj, Dj] 表示第 j 个问题，请你根据已知条件找出 Cj / Dj = ? 的结果作为答案。

返回 所有问题的答案 。如果存在某个无法确定的答案，则用 -1.0 替代这个答案。如果问题中出现了给定的已知条件中没有出现的字符串，也需要用 -1.0 替代这个答案。

注意：输入总是有效的。你可以假设除法运算中不会出现除数为 0 的情况，且不存在任何矛盾的结果。
*/
class Solution {
public:
	vector<double> calcEquation(vector<vector<string>>& equations, vector<double>& values, vector<vector<string>>& queries) {
		unordered_set<string> vers;
		unordered_map<string, unordered_map<string, double>> d;
		for (int i = 0; i < equations.size(); i++)
		{
			auto a = equations[i][0], b = equations[i][1];
			auto c = values[i];
			d[a][b] = c, d[b][a] = 1 / c;
			vers.insert(a), vers.insert(b);
		}

		for (auto k : vers)
		{
			for (auto i : vers)
				for (auto j : vers)
					if (d[i][k] && d[j][k])
						d[i][j] = d[i][k] * d[k][j];
		}

		vector<double> res;
		for (auto q : queries)
		{
			auto a = q[0], b = q[1];
			if (d[a][b]) res.push_back(d[a][b]);
			else res.push_back(-1);
		}
		return res;
	}
};