#include<vector>
#include<string>
#include<algorithm>

using namespace std;


/*
646. 最长数对链

给你一个由 n 个数对组成的数对数组 pairs ，其中 pairs[i] = [lefti, righti] 且 lefti < righti 。

现在，我们定义一种 跟随 关系，当且仅当 b < c 时，数对 p2 = [c, d] 才可以跟在 p1 = [a, b] 后面。我们用这种形式来构造 数对链 。

找出并返回能够形成的 最长数对链的长度 。

你不需要用到所有的数对，你可以以任何顺序选择其中的一些数对来构造。
*/
class Solution {
public:
	int findLongestChain(vector<vector<int>>& pairs) {
		sort(pairs.begin(), pairs.end(), [](vector<int>& a, vector<int>& b) {
			return a[1] < b[1];
			});

		int res = 1, ed = pairs[0][1];
		for (auto& p : pairs)
		{
			if (p[0] > ed)
			{
				res++;
				ed = p[1];
			}
		}
		return res;
	}
};